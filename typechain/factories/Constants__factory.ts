/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";

import type { Constants } from "../Constants";

export class Constants__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Constants> {
    return super.deploy(overrides || {}) as Promise<Constants>;
  }
  getDeployTransaction(
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Constants {
    return super.attach(address) as Constants;
  }
  connect(signer: Signer): Constants__factory {
    return super.connect(signer) as Constants__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Constants {
    return new Contract(address, _abi, signerOrProvider) as Constants;
  }
}

const _abi = [
  {
    inputs: [],
    name: "CRV",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CURVE_3CRV_GAUGE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CURVE_3CRV_POOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CURVE_3CRV_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CURVE_MINTR",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CURVE_SUSD_GAUGE",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CURVE_SUSD_POOL",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "CURVE_SUSD_TOKEN",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DAI",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SNX",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "SUSD",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "USDT",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "WBTC",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61030b610026600b82828239805160001a60731461001957fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100f45760003560e01c80638b90e45111610096578063aacd522e11610070578063aacd522e14610165578063c54e44eb1461016d578063e0bab4c414610175578063e8d6101e1461017d576100f4565b80638b90e4511461014d578063945c91421461015557806398f02f021461015d576100f4565b80635ed89197116100d25780635ed891971461012d57806368db7dc3146101355780636f35563b1461013d57806389a3027114610145576100f4565b806315d8eeba146100f95780634dede3de1461011d57806356c68d6614610125575b600080fd5b610101610185565b604080516001600160a01b039092168252519081900360200190f35b61010161019d565b6101016101b5565b6101016101cd565b6101016101e5565b6101016101fd565b610101610215565b61010161022d565b610101610245565b61010161025d565b610101610275565b61010161028d565b6101016102a5565b6101016102bd565b7357ab1ec28d129707052df4df418d58a2d46d5f5181565b732260fac5e5542a773aa44fbcfedf7c193bc2c59981565b736c3f90f043a72fa612cbac8115ee7e52bde6e49081565b73a5407eae9ba41422680e2e00537571bcc53efbfd81565b73c25a3a3b969415c80451098fa907ec722572917f81565b73a90996896660decc6e997655e065b2378885784981565b73a0b86991c6218b36c1d19d4a2e9eb0ce3606eb4881565b73bebc44782c7db0a1a60cb6fe97d0b483032ff1c781565b73d533a949740bb3306d119cc777fa900ba034cd5281565b73bfcf63294ad7105dea65aa58f8ae5be2d9d0952a81565b73d061d61a4d941c39e5453435b6345dc261c2fce081565b73dac17f958d2ee523a2206206994597c13d831ec781565b736b175474e89094c44da98b954eedeac495271d0f81565b73c011a73ee8576fb46f5e1c5751ca3b9fe0af2a6f8156fea264697066735822122010b0efef2aff0f858920fef6b4269c8b9db263a2a3a6ca32845cec38eddeef9d64736f6c63430007030033";
